#!/bin/bash

# Create a directory for resized images if it doesn't exist
mkdir -p resized_images

# Loop through all JPG files in the current directory
for img in *.jpg; do
  # Check if the image size is greater than 2MB (2000000 bytes)
  if [ $(stat -c%s "$img") -gt 2000000 ]; then
    echo "Resizing $img..."

    # Set initial quality
    quality=100

    # Start resizing the image
    convert "$img" -quality $quality "resized_images/$img"

    # Loop to reduce quality until the image is under 2MB
    while [ $(stat -c%s "resized_images/$img") -gt 2000000 ]; do
      # Reduce quality in steps of 5
      quality=$((quality - 5))

      # Convert the image with the current quality setting
      convert "$img" -quality $quality "resized_images/$img"

      # Check if the quality is too low
      if [ $quality -le 10 ]; then
        echo "Warning: Unable to resize $img to under 2MB without reducing quality too much."
        break
      fi
    done

    # Output the final size and quality used
    echo "$img resized to $(stat -c%s "resized_images/$img") bytes using quality $quality."
  else
    # Copy images that are already under 2MB without modification
    cp "$img" "resized_images/$img"
    echo "$img is already under 2MB, copied without changes."
  fi
done

echo "Resizing process completed."

